akka {
  loglevel = debug
  actor {
    provider = cluster
  }
  remote {
    log-remote-lifecycle-events = on
    artery.canonical {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }
  cluster {
    seed-nodes = [
       "akka://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]
  }
}

clustering {
 ip = "127.0.0.1"
 ip = ${?CLUSTER_IP}
 port = 1600
 port = ${?CLUSTER_PORT}
 seed-ip = "127.0.0.1"
 seed-ip = ${?CLUSTER_IP}
 seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
 seed-port = 1600
 seed-port = ${?SEED_PORT_1600_TCP_PORT}
 cluster.name = clustering-cluster
}

kamon {
  jaeger {

    # Define the host/port where the Jaeger Collector/Agent is listening.
    host = ${?JAEGER_HOST} #"localhost"
    port = 14268

    # Protocol used to send data to Jaeger. The available options are:
    #   - http: Sends spans using jaeger.thrift over HTTP (collector).
    #   - https: Sends spans using jaeger.thrift over HTTPS (collector).
    #   - udp: Sends spans using jaeger.thrift compact over UDP (agent).
    protocol = http

    # for http and https, this is the full url to be used
    http-url = ${kamon.jaeger.protocol}"://"${kamon.jaeger.host}":"${kamon.jaeger.port}"/api/traces"

    # Enable or disable including tags from kamon.environment as labels
    include-environment-tags = no
  }
  instrumentation.akka.filters {
    actors{
      start-trace {
        includes = [ "clustering-cluster/user/ClusterListener" ]
      }
      trace {
        includes = [ "my-app/user/job-manager" ]
      } 
    }
  }

}